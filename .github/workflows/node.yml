name: node

on:
  workflow_dispatch:
    inputs:
      version:
        description: "node version,without prefix 'v'"
        required: true
        type: string
jobs:
  node:
    runs-on: ubuntu-20.04
    permissions: write-all
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Checkout Runtime
        run: |
          git clone https://gist.github.com/inkroom/501548078a930c6f3bd98ea257409648 runtime
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to the Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/node
            ${{ secrets.DOCKER_HUB_USERNAME }}/node
          tags: |
            type=raw,value=latest,enable=true
            type=raw,value=${{ inputs.version }}
            type=match,pattern=(\d+).(\d+).(\d+),group=1,value=${{ inputs.version }}
            type=match,pattern=(\d+.\d+).(\d+),group=1,value=${{ inputs.version }}
          labels: |
            org.opencontainers.image.description=node开发环境
            org.opencontainers.image.title=node
      - name: Platforms
        id: platforms
        run: |
          p=$(curl https://hub.docker.com/v2/namespaces/library/repositories/node/tags/${{ inputs.version }}-bullseye-slim | jq --raw-output -c '[.images[] | select(.architecture!="unknown") | select (.architecture!="ppc64le") | select(.os!="unknown") | .os + "/" + .architecture]' | sed 's/\[//g;s/\]//g;s/"//g')
          echo "支持的架构: $p"
          echo "p=$p" >> $GITHUB_OUTPUT
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: runtime
          file: runtime/Dockerfile.node
          platforms: ${{ steps.platforms.outputs.p }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          build-args: |
            NODE_VERSION=${{ inputs.version }}
