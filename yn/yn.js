// Generated by Selenium IDE
// 因为 action 直接安装 firefox 会出错，只能使用docker+python,该文件基本废弃
const { Builder, By, Key, until, Actions } = require('selenium-webdriver')

const firefox = require('selenium-webdriver/firefox');

let driver
let vars
async function waitForWindow(timeout = 2) {
    await driver.sleep(timeout)
    const handlesThen = vars["windowHandles"]
    const handlesNow = await driver.getAllWindowHandles()


        console.log('now' ,handlesNow);
        console.log('then',handlesThen);
    if (handlesNow.length > handlesThen.length) {
        return handlesNow.find(handle => (!handlesThen.includes(handle)))
    }
    throw new Error("New window did not appear before timeout")
}

async function s() {



    const service = new firefox.ServiceBuilder(`${process.cwd()}/geckodriver`);
    const options = new firefox.Options();
    options.addArguments('-headless');
    driver = await new Builder().forBrowser('firefox').setFirefoxOptions(options).setFirefoxService(service).build()
    vars = {}

    await driver.get("https://fufugal.com/")
    await driver.findElement(By.css("#formSign > div:nth-child(1) > input")).click()
    await driver.findElement(By.css("#formSign > div:nth-child(1) > input")).sendKeys(process.env.Y_USERNAME)
    await driver.findElement(By.css("#formSign > div:nth-child(2) > input")).click()
    await driver.findElement(By.css("#formSign > div:nth-child(2) > input")).sendKeys(process.env.Y_PASSWORD)

   const login = await driver.findElement(By.css("button:nth-child(4)"))
    await driver.actions()
      .move({ origin: login })
      .click()
      .perform()
//    await driver.findElement(By.css("button:nth-child(4)")).click()
        await driver.sleep(5000);
        await driver.executeScript("location.reload()");
        await driver.sleep(5000);
//    await driver.sleep(4000);

//    await driver.get("https://yngal.com/");
        //
//          await driver.executeScript("location.reload()");
//    await driver.sleep(4000);

//    await driver.findElement(By.css(".upDate:nth-child(1) p")).click()
console.log('before');
        vars["windowHandles"] = await driver.getAllWindowHandles();
   const clickable = await driver.findElement(By.css(".upDate:nth-child(1) p"));// 点击第一项
    await driver.actions()
      .move({ origin: clickable })
      .click()
      .perform()
console.log('ok');


    vars["win6468"] = await waitForWindow(2000)
    await driver.switchTo().window(vars["win6468"])


        await driver.sleep(3000);
        console.log('href = ' + await driver.executeScript('return location.href'));

//            let r = await driver.executeScript("return (document.getElementsByTagName('body')[0].innerHTML )")
//    console.log(r);

    var count = await driver.findElement(By.css("body"))
    console.log(await count.getText())

    // await driver.get("https://www.oschina.net/")
    // await driver.manage().window().setRect({ width: 550, height: 691 })
    // vars["windowHandles"] = await driver.getAllWindowHandles()
    // await driver.findElement(By.css(".panel-content__column:nth-child(1) > .tab-page:nth-child(3) .item:nth-child(1) > .item-title")).click()


    // vars["win3843"] = await waitForWindow(2000)
    // await driver.switchTo().window(vars["win3843"])
    // var text = await driver.findElement(By.className('article-box__title')).getText()
    // console.log(text);
    await driver.quit();
}
s();
